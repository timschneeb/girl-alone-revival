// <auto-generated />
using System;
using GirlAloneServer.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GirlAloneServer.Core.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241110200727_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_trgm");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GirlAloneServer.Core.Model.AlbumData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("AL_AlbumSaveInfo")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("AD_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "AD_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "AD_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "AD_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("AlbumData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.BugData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("BU_BugSpawn")
                        .HasColumnType("text");

                    b.Property<string>("BU_Bug_CoolTime")
                        .HasColumnType("text");

                    b.Property<string>("BU_Bug_Count")
                        .HasColumnType("text");

                    b.Property<int?>("BU_Event")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("BU_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "BU_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "BU_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "BU_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("BugData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.ConversationData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("CO_AskCount")
                        .HasColumnType("integer");

                    b.Property<int?>("CO_ConversationCount")
                        .HasColumnType("integer");

                    b.Property<string>("CO_ConversationDailyCount")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CO_Conversation_Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CO_ExtraConversationCount")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("CO_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "CO_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "CO_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "CO_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("ConversationData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.EndingData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("EN_EndingClearCount")
                        .HasColumnType("integer");

                    b.Property<int?>("EN_Ending_0")
                        .HasColumnType("integer");

                    b.Property<int?>("EN_Ending_1")
                        .HasColumnType("integer");

                    b.Property<int?>("EN_Ending_2")
                        .HasColumnType("integer");

                    b.Property<int?>("EN_Ending_3")
                        .HasColumnType("integer");

                    b.Property<string>("EN_SelectedPaper")
                        .HasColumnType("text");

                    b.Property<string>("EN_TargetEnding")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("EN_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "EN_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "EN_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "EN_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("EndingData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.GirlData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<float?>("GD_Feeling")
                        .HasColumnType("real");

                    b.Property<int?>("GD_FeelingUp_DemandCount")
                        .HasColumnType("integer");

                    b.Property<int?>("GD_FeelingUp_GiveItemCount")
                        .HasColumnType("integer");

                    b.Property<string>("GD_Hair")
                        .HasColumnType("text");

                    b.Property<float?>("GD_Intimacy")
                        .HasColumnType("real");

                    b.Property<string>("GD_Pants")
                        .HasColumnType("text");

                    b.Property<int?>("GD_Posture")
                        .HasColumnType("integer");

                    b.Property<string>("GD_Shirt")
                        .HasColumnType("text");

                    b.Property<int?>("GD_Sociability")
                        .HasColumnType("integer");

                    b.Property<string>("GD_Tire")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("GD_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "GD_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "GD_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "GD_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("GirlData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.InventoryData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("IN_Inven_Dic_0")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_1")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_2")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_3")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_4")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_5")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_6")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_7")
                        .HasColumnType("text");

                    b.Property<string>("IN_Inven_Dic_Background")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("IN_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "IN_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "IN_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "IN_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("InventoryData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.MailData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("MailId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Source")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "ML_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "ML_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "ML_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("MailData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.MapData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("MA_BuildingInfo")
                        .HasColumnType("text");

                    b.Property<int?>("MA_Date_Place")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("MA_Date_StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MA_FirstClear")
                        .HasColumnType("text");

                    b.Property<string>("MA_ItemTime")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("MA_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "MA_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "MA_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "MA_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("MapData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.MissionData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<DateTime?>("MS_DailyCheck_Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MS_Mission_Level")
                        .HasColumnType("text");

                    b.Property<string>("MS_Mission_OneDay")
                        .HasColumnType("text");

                    b.HasKey("UserId")
                        .HasName("MS_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "MS_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "MS_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "MS_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("MissionData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.PremiumData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("PR_Hammer")
                        .HasColumnType("text");

                    b.Property<int?>("PR_HighScore")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("PR_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "PR_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "PR_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "PR_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("PremiumData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.QuestData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("QU_CutSceneName")
                        .HasColumnType("text");

                    b.Property<string>("QU_CutScene_List")
                        .HasColumnType("text");

                    b.Property<string>("QU_EpisodeName")
                        .HasColumnType("text");

                    b.Property<string>("QU_Quest_ID")
                        .HasColumnType("text");

                    b.Property<string>("QU_Quest_List")
                        .HasColumnType("text");

                    b.Property<string>("QU_Quest_MinigameTryCount")
                        .HasColumnType("text");

                    b.Property<int?>("QU_Quest_Score_0")
                        .HasColumnType("integer");

                    b.Property<int?>("QU_Quest_Score_1")
                        .HasColumnType("integer");

                    b.Property<int?>("QU_Quest_Score_2")
                        .HasColumnType("integer");

                    b.Property<int?>("QU_Quest_Score_3")
                        .HasColumnType("integer");

                    b.Property<int?>("QU_Quest_Score_4")
                        .HasColumnType("integer");

                    b.Property<string>("QU_Quest_Time")
                        .HasColumnType("text");

                    b.Property<int?>("QU_Quest_Type")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("QU_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "QU_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "QU_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "QU_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("QuestData");
                });

            modelBuilder.Entity("GirlAloneServer.Core.Model.UserData", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("UD_AdsCount")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_AdsCount_Date")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_AdsCount_Gem")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_BuyNoAds")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_BuyNoPopupAds")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_Episode")
                        .HasColumnType("integer");

                    b.Property<string>("UD_Exp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UD_FeverTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UD_Flower_CoolTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UD_Flower_StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UD_Gold")
                        .HasColumnType("integer");

                    b.Property<int>("UD_Intro")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_Jewelery")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UD_LastAdsTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UD_LastAdsTime_Gem")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UD_LastQuitTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UD_LevelUpPet")
                        .HasColumnType("text");

                    b.Property<int?>("UD_Ruby")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_Ticket")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_TutorialItemType")
                        .HasColumnType("integer");

                    b.Property<int?>("UD_TutorialStatus")
                        .HasColumnType("integer");

                    b.HasKey("UserId")
                        .HasName("UD_UserId_pk");

                    b.HasIndex(new[] { "UserId" }, "UD_UserId_gin");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "UserId" }, "UD_UserId_gin"), "gin");
                    NpgsqlIndexBuilderExtensions.HasOperators(b.HasIndex(new[] { "UserId" }, "UD_UserId_gin"), new[] { "gin_trgm_ops" });

                    b.ToTable("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
